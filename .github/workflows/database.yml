            
name: Deploy Postgres

on:
  push:
    paths:
      - "database"
    branches:
      - master

jobs:
  deploy_database:
      runs-on: ubuntu-latest
      timeout-minutes: 5

      steps:

      # Checkout
      - name: Checkout code
        uses: actions/checkout@master
        with:
          ref: master

      # Verify Changed
      - name: Verify config changed
        uses: tj-actions/verify-changed-files@v5.5
        id: changed_files
        with:
          files: |
            database

      - name: Display changed files
        if: steps.changed_files.outputs.files_changed == 'true'
        run: |
          echo "Changed files: ${{ steps.changed_files.outputs.changed_files }}" 


      # Copy Config
      - name: Copy Config
        if: steps.changed_files.outputs.files_changed == 'true'
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key : ${{ secrets.SERVER_PRIVATE }}
          source: "database"
          target: "./deploy"
          rm: false
          
      # Deploy
      - name: Deploy
        if: steps.changed_files.outputs.files_changed == 'true'
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key : ${{ secrets.SERVER_PRIVATE }}
          # -V, --renew-anon-volumes   Recreate anonymous volumes instead of retrieving
          script: |
            cd ./deploy/database
            echo POSTGRES_PASSWORD="${{secrets.POSTGRES_PASSWORD}}" >> .env
            docker-compose up -d -V --no-deps 